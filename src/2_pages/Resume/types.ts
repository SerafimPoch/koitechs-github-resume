import { z } from "zod";

const ownerSchema = z.object({
  login: z.string(),
  id: z.number(),
  nodeId: z.string(),
  avatarUrl: z.string().url(),
  gravatarId: z.string().optional(),
  url: z.string().url(),
  htmlUrl: z.string().url(),
  followersUrl: z.string().url(),
  followingUrl: z.string().url(),
  gistsUrl: z.string().url(),
  starredUrl: z.string().url(),
  subscriptionsUrl: z.string().url(),
  organizationsUrl: z.string().url(),
  reposUrl: z.string().url(),
  eventsUrl: z.string().url(),
  receivedEventsUrl: z.string().url(),
  type: z.string(),
  siteAdmin: z.boolean(),
});

export const repoSchema = z.object({
  id: z.number(),
  nodeId: z.string(),
  name: z.string(),
  fullName: z.string(),
  private: z.boolean(),
  owner: ownerSchema,
  htmlUrl: z.string().url(),
  description: z.string().nullable(),
  fork: z.boolean(),
  url: z.string().url(),
  forksUrl: z.string().url(),
  keysUrl: z.string().url(),
  collaboratorsUrl: z.string().url(),
  teamsUrl: z.string().url(),
  hooksUrl: z.string().url(),
  issueEventsUrl: z.string().url(),
  eventsUrl: z.string().url(),
  assigneesUrl: z.string().url(),
  branchesUrl: z.string().url(),
  tagsUrl: z.string().url(),
  blobsUrl: z.string().url(),
  gitTagsUrl: z.string().url(),
  gitRefsUrl: z.string().url(),
  treesUrl: z.string().url(),
  statusesUrl: z.string().url(),
  languagesUrl: z.string().url(),
  stargazersUrl: z.string().url(),
  contributorsUrl: z.string().url(),
  subscribersUrl: z.string().url(),
  subscriptionUrl: z.string().url(),
  commitsUrl: z.string().url(),
  gitCommitsUrl: z.string().url(),
  commentsUrl: z.string().url(),
  issueCommentUrl: z.string().url(),
  contentsUrl: z.string().url(),
  compareUrl: z.string().url(),
  mergesUrl: z.string().url(),
  archiveUrl: z.string().url(),
  downloadsUrl: z.string().url(),
  issuesUrl: z.string().url(),
  pullsUrl: z.string().url(),
  milestonesUrl: z.string().url(),
  notificationsUrl: z.string().url(),
  labelsUrl: z.string().url(),
  releasesUrl: z.string().url(),
  deploymentsUrl: z.string().url(),
  createdAt: z.string(),
  updatedAt: z.string(),
  pushedAt: z.string(),
  gitUrl: z.string().url(),
  sshUrl: z.string(),
  cloneUrl: z.string().url(),
  svnUrl: z.string().url(),
  homepage: z.string().nullable(),
  size: z.number(),
  stargazersCount: z.number(),
  watchersCount: z.number(),
  language: z.string().nullable(),
  hasIssues: z.boolean(),
  hasProjects: z.boolean(),
  hasDownloads: z.boolean(),
  hasWiki: z.boolean(),
  hasPages: z.boolean(),
  forksCount: z.number(),
  mirrorUrl: z.string().nullable(),
  archived: z.boolean(),
  disabled: z.boolean(),
  openIssuesCount: z.number(),
  license: z
    .object({
      key: z.string(),
      name: z.string(),
      spdxId: z.string(),
      url: z.string().url().nullable(),
      nodeId: z.string(),
    })
    .nullable(),
  forks: z.number(),
  openIssues: z.number(),
  watchers: z.number(),
  defaultBranch: z.string(),
});

export type GitHubRepo = z.infer<typeof repoSchema>;
